// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['views/slider'], function(SliderView) {
    'use strict';
    var ProjectView;
    return ProjectView = (function(_super) {
      __extends(ProjectView, _super);

      function ProjectView() {
        return ProjectView.__super__.constructor.apply(this, arguments);
      }

      ProjectView.prototype.el = '.main';

      ProjectView.prototype.initialize = function() {
        return this.render();
      };

      ProjectView.prototype.destroy = function() {
        return console.log('destroy');
      };

      ProjectView.prototype.render = function() {
        this.$el.html(this.template());
        this.$el.find('article').addClass('is-visible');
        this.$el.addClass('is-visible');
        return this;
      };

      ProjectView.prototype.atBottom = function() {
        if ($(window).scrollTop() > $('article').height() - $(window).height() - 100) {
          return $('.navigation:not(.is-expanded)').addClass('is-expanded js-atBottom');
        } else {
          $('.navigation.js-atBottom').removeClass('is-expanded js-atBottom');
          return $('.navigation').scrollTop(0);
        }
      };

      ProjectView.prototype.initializeSlider = function(slider) {
        return _.each($('.slider'), function(slider) {
          return new SliderView({
            el: slider
          });
        });
      };

      return ProjectView;

    })(Backbone.View);
  });

}).call(this);
