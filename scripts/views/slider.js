// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define([], function() {
    'use strict';
    var SliderView;
    return SliderView = (function(_super) {
      __extends(SliderView, _super);

      function SliderView() {
        return SliderView.__super__.constructor.apply(this, arguments);
      }

      SliderView.prototype.el = null;

      SliderView.prototype.$images = null;

      SliderView.prototype.$navigation = null;

      SliderView.prototype.$wrapper = null;

      SliderView.prototype.width = 0;

      SliderView.prototype.events = {
        'click .slider-images li': 'onClick',
        'click .slider-navigation li': 'onClick'
      };

      SliderView.prototype.initialize = function() {
        this.$images = this.$el.find('.slider-images li');
        this.$wrapper = this.$el.find('.slider-wrapper');
        this.$navigation = this.$el.find('.slider-navigation ul li');
        return this.setSlider();
      };

      SliderView.prototype.setSlider = function() {
        var $image;
        this.width = 0;
        _.each(this.$images, (function(_this) {
          return function(image, index) {
            return _this.width += $(image).width() + 40;
          };
        })(this));
        this.$wrapper.width(this.width);
        $image = this.$images.filter('.active');
        return this.moveWrapper($image.width(), $image.position().left);
      };

      SliderView.prototype.onClick = function(e) {
        var $el, $image;
        $el = $(e.currentTarget);
        this.$images.removeClass('active');
        $image = this.$images.eq($el.index());
        $image.addClass('active');
        this.$navigation.removeClass('active');
        this.$navigation.eq($el.index()).addClass('active');
        return this.moveWrapper($image.width(), $image.position().left);
      };

      SliderView.prototype.moveWrapper = function(w, p) {
        return this.$wrapper.offset({
          left: ($(window).width() - w - 40) / 2 - p
        });
      };

      return SliderView;

    })(Backbone.View);
  });

}).call(this);
